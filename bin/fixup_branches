#!/usr/bin/env bash

set -e # exit on any error

########
# If you screwed up the local copy of 'exercises', and just
#  reclone from github,
# make all the remote branches local tracking branches via:
########
# for branch in `git branch -a | grep remotes | grep -v HEAD | grep -v main`; do
#    git branch --track ${branch##*/} $branch
# done

git checkout main
cp Gemfile        Gemfile.newest
cp Gemfile.lock   Gemfile.lock.newest
cp Guardfile      Guardfile.newest
cp test_helper.rb test_helper.rb.newest

branches=()
eval "$(git for-each-ref --shell --format='branches+=(%(refname))' refs/heads/)"
for branch in "${branches[@]}"; do
  _BRANCH_NAME="$(echo ${branch} | cut -d/ -f 3-)"  # chop the refs/heads/ off

  if [ "${_BRANCH_NAME}" != "main" ]
  then
    git checkout ${_BRANCH_NAME}

    # delete some things
    git rm --ignore-unmatch CLASS_SETUP.md
    git rm --ignore-unmatch outline.md
    git rm --ignore-unmatch README.md
    git rm --ignore-unmatch references.txt
    git rm --ignore-unmatch sanity_test.rb
    git rm -rf --ignore-unmatch bin
    rm -rf bin

    # update some things
    cp Gemfile.newest         Gemfile
    git add Gemfile

    cp Gemfile.lock.newest    Gemfile.lock
    git add Gemfile.lock

    cp Guardfile.newest       Guardfile
    git add Guardfile

    cp test_helper.rb.newest  test_helper.rb
    git add test_helper.rb

    if ! git diff-index --quiet HEAD --; then  # if there's anything to commit
        git commit -uno -m 'run fixup_branches script'
    fi
  fi
done

echo
echo "Cleaning up tmp files"
git checkout main
rm *.newest

echo "You now must push all of the branches yourself...or you could make a little script"
